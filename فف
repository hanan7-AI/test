import os
import numpy as np
from scipy.io import wavfile
from scipy.fftpack import fft
from sklearn.cluster import DBSCAN
import matplotlib.pyplot as plt


def load_audio_files(folder_path):
    files = [os.path.join(folder_path, f) for f in os.listdir(folder_path) if f.endswith('.wav')]
    return files


def compute_fft(file_path, n_bins=1024):
    samplerate, data = wavfile.read(file_path)
    data = data / np.max(np.abs(data))  # Normalize
    fft_result = fft(data)
    magnitude = np.abs(fft_result[:n_bins])  # Take absolute magnitude
    return magnitude


def extract_features(files, n_bins=1024):
    feature_list = []
    for file in files:
        magnitude = compute_fft(file, n_bins)
        feature_list.append(magnitude)
    return np.array(feature_list)


def cluster_with_dbscan(features, eps=10, min_samples=3):
    dbscan = DBSCAN(eps=eps, min_samples=min_samples)
    labels = dbscan.fit_predict(features)
    return labels


def plot_dbscan(features, labels):
    plt.figure(figsize=(8, 4))
    for i, label in enumerate(labels):
        color = 'k' if label == -1 else plt.cm.jet(float(label) / (max(labels) + 1))
        plt.scatter(range(len(features[i])), features[i], c=color, s=10, label=f'Cluster {label}' if label != -1 else "Noise")
    plt.xlabel("Frequency Bin")
    plt.ylabel("Magnitude")
    plt.title("DBSCAN Clustering of Magnitude Features")
    plt.legend()
    plt.show()


# Main script
folder_path = r"C:\Users\alqahth\OneDrive - Air Products and Chemicals, Inc\Desktop\deep_clustring\location_2" 
files = load_audio_files(folder_path)
features = extract_features(files, n_bins=1024)
labels = cluster_with_dbscan(features, eps=10, min_samples=3)
plot_dbscan(features, labels)
